version: "3.9"

services:
  backend:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py makemigrations --merge &&
             python manage.py collectstatic --noinput &&
             gunicorn core.asgi:application -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - .env
    expose:
      - "8000"
    depends_on:
      - db
      - redis

  db:
    container_name: db
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis
    restart: always

  nginx:
    image: nginx:latest
    ports:
      - "443:443"
    depends_on:
      - backend
    volumes:
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl/cert.crt:/etc/nginx/ssl/cert.crt:ro
      - ./ssl/private.key:/etc/nginx/ssl/private.key:ro

  celery_worker:
    build: .
    command: celery -A core worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  celery_beat:
    build: .
    command: celery -A core beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0



volumes:
  postgres_data:
  static_volume:
  media_volume: